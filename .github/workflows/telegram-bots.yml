# .github/workflows/telegram-bots.yml
name: ü§ñ Telegram Bots Scheduler

on:
  schedule:
    # Ch·∫°y 3 l·∫ßn m·ªói ng√†y: 8AM, 2PM, 8PM (UTC+7 = UTC-7 hours)
    - cron: '0 1,4,7,10,13 * * *'  # 8, 13, 18 Vietnam time

  # Cho ph√©p ch·∫°y th·ªß c√¥ng
  workflow_dispatch:

jobs:
  run-telegram-bots:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout Repository
      uses: actions/checkout@v4

    - name: üêç Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: üåê Setup Chrome Browser
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable

    - name: üöó Setup ChromeDriver
      uses: nanasess/setup-chromedriver@master

    - name: üì¶ Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: üóÇÔ∏è Create Required Directories
      run: |
        mkdir -p utils scheduler

    - name: ü§ñ Run AI News Bot
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        USER_TAG: ${{ secrets.USER_TAG }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "üîÑ Running AI News Bot..."
        echo "Checking environment variables..."
        echo "BOT_TOKEN: ${BOT_TOKEN:0:10}..." 
        echo "CHAT_ID: $CHAT_ID"
        echo "USER_TAG: $USER_TAG"
        timeout 300 python main.py ai || echo "‚ùå AI News Bot failed or timed out"

    - name: ü™ô Run Gold Price Bot
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        USER_TAG: ${{ secrets.USER_TAG }}
      run: |
        echo "üîÑ Running Gold Price Bot..."
        echo "BOT_TOKEN: ${BOT_TOKEN:0:10}..."
        echo "CHAT_ID: $CHAT_ID" 
        timeout 300 python main.py gold || echo "‚ùå Gold Price Bot failed or timed out"
      continue-on-error: true

    - name: üöå Run Bus Price Bot
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        USER_TAG: ${{ secrets.USER_TAG }}
        TARGET_URL: ${{ secrets.TARGET_URL }}
      run: |
        echo "üîÑ Running Bus Price Bot..."
        echo "BOT_TOKEN: ${BOT_TOKEN:0:10}..."
        echo "CHAT_ID: $CHAT_ID"
        echo "TARGET_URL: $TARGET_URL"
        timeout 600 python main.py bus || echo "‚ùå Bus Price Bot failed or timed out"
      continue-on-error: true

    - name: ‚úÖ Completion Notification
      if: always()
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
      run: |
        python -c "
        import requests
        import os
        from datetime import datetime
        
        bot_token = os.getenv('BOT_TOKEN')
        chat_id = os.getenv('CHAT_ID')
        
        if bot_token and chat_id:
            message = f'ü§ñ GitHub Actions completed at {datetime.now().strftime(\"%H:%M %d/%m/%Y\")}'
            url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
            requests.post(url, data={'chat_id': chat_id, 'text': message})
        " || echo "Notification failed"
